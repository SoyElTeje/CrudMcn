const sql = require("mssql");

const config = {
  server: "localhost",
  database: "APPDATA",
  user: "sa",
  password: "123456",
  options: {
    encrypt: false,
    trustServerCertificate: true,
  },
};

async function removeUniqueConstraint() {
  try {
    console.log("üîß Conectando a la base de datos APPDATA...");
    const pool = await sql.connect(config);

    console.log("‚úÖ Conectado exitosamente");

    // Verificar si la restricci√≥n existe
    console.log("üîç Verificando si existe la restricci√≥n √∫nica...");
    const checkResult = await pool.request().query(`
      SELECT * FROM sys.objects 
      WHERE object_id = OBJECT_ID(N'[dbo].[UQ_TABLE_CONDITIONS]') 
      AND type = 'UQ'
    `);

    if (checkResult.recordset.length > 0) {
      console.log("‚ö†Ô∏è Restricci√≥n √∫nica encontrada, elimin√°ndola...");

      // Eliminar la restricci√≥n √∫nica
      await pool.request().query(`
        ALTER TABLE TABLE_CONDITIONS 
        DROP CONSTRAINT UQ_TABLE_CONDITIONS
      `);

      console.log("‚úÖ Restricci√≥n √∫nica UQ_TABLE_CONDITIONS eliminada");
    } else {
      console.log("‚ÑπÔ∏è La restricci√≥n √∫nica UQ_TABLE_CONDITIONS no existe");
    }

    // Crear un nuevo √≠ndice que permita m√∫ltiples condiciones por campo
    console.log("üîç Verificando si existe el nuevo √≠ndice...");
    const indexResult = await pool.request().query(`
      SELECT * FROM sys.indexes 
      WHERE name = 'IX_TABLE_CONDITIONS_FIELD_ORDER'
    `);

    if (indexResult.recordset.length === 0) {
      console.log("üîß Creando nuevo √≠ndice para m√∫ltiples condiciones...");

      await pool.request().query(`
        CREATE INDEX IX_TABLE_CONDITIONS_FIELD_ORDER 
        ON TABLE_CONDITIONS(ActivatedTableId, ColumnName, ConditionType)
      `);

      console.log("‚úÖ Nuevo √≠ndice IX_TABLE_CONDITIONS_FIELD_ORDER creado");
    } else {
      console.log("‚ÑπÔ∏è El √≠ndice IX_TABLE_CONDITIONS_FIELD_ORDER ya existe");
    }

    console.log("");
    console.log(
      "üéâ Ahora se pueden crear m√∫ltiples condiciones para el mismo campo"
    );
    console.log("üìã Ejemplo de condiciones permitidas:");
    console.log("   - Campo ID: condici√≥n min > 0");
    console.log("   - Campo ID: condici√≥n max < 1000");
    console.log("   - Campo ID: condici√≥n required = true");
    console.log("");
    console.log(
      "üí° Las condiciones se aplicar√°n en secuencia durante la validaci√≥n"
    );

    await pool.close();
  } catch (error) {
    console.error("‚ùå Error:", error.message);

    if (error.code === "ELOGIN") {
      console.error("üí° Verifica las credenciales de la base de datos");
    } else if (error.code === "ESOCKET") {
      console.error("üí° Verifica que SQL Server est√© ejecut√°ndose");
    }
  }
}

// Ejecutar la funci√≥n
removeUniqueConstraint();



